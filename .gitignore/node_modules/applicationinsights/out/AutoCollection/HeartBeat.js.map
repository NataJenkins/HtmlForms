{"version":3,"file":"HeartBeat.js","sourceRoot":"","sources":["../../AutoCollection/HeartBeat.ts"],"names":[],"mappings":"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","sourcesContent":["import os = require(\"os\");\nimport TelemetryClient = require(\"../Library/TelemetryClient\");\nimport Constants = require(\"../Declarations/Constants\");\nimport Config = require(\"../Library/Config\");\nimport Context = require(\"../Library/Context\");\n\nclass HeartBeat {\n\n    public static INSTANCE: HeartBeat;\n\n    private _collectionInterval: number = 900000;\n    private _client: TelemetryClient;\n    private _handle: NodeJS.Timer | null;\n    private _isEnabled: boolean;\n    private _isInitialized: boolean;\n\n    constructor(client: TelemetryClient) {\n        if (!HeartBeat.INSTANCE) {\n            HeartBeat.INSTANCE = this;\n        }\n\n        this._isInitialized = false;\n        this._client = client;\n    }\n\n    public enable(isEnabled: boolean, config?: Config) {\n        this._isEnabled = isEnabled;\n        if (this._isEnabled && !this._isInitialized) {\n            this._isInitialized = true;\n        }\n\n        if (isEnabled) {\n            if (!this._handle) {\n                this._handle = setInterval(() => this.trackHeartBeat(config, () => {}), this._collectionInterval);\n                this._handle.unref(); // Allow the app to terminate even while this loop is going on\n            }\n        } else {\n            if (this._handle) {\n                clearInterval(this._handle);\n                this._handle = null;\n            }\n        }\n    }\n\n    public isInitialized() {\n        return this._isInitialized;\n    }\n\n    public static isEnabled() {\n        return HeartBeat.INSTANCE && HeartBeat.INSTANCE._isEnabled;\n    }\n\n    public trackHeartBeat(config: Config, callback: () => void) {\n        let properties: {[key: string]: string} = {};\n        const sdkVersion = Context.sdkVersion; // \"node\" or \"node-nativeperf\"\n        properties[\"sdk\"] = sdkVersion;\n        properties[\"osType\"] = os.type();\n        if (process.env.WEBSITE_SITE_NAME) { // Web apps\n            properties[\"appSrv_SiteName\"] = process.env.WEBSITE_SITE_NAME || \"\";\n            properties[\"appSrv_wsStamp\"] = process.env.WEBSITE_HOME_STAMPNAME || \"\";\n            properties[\"appSrv_wsHost\"] = process.env.WEBSITE_HOSTNAME || \"\";\n        } else if (process.env.FUNCTIONS_WORKER_RUNTIME) { // Function apps\n            properties[\"azfunction_appId\"] = process.env.WEBSITE_HOSTNAME;\n        } \n        this._client.trackMetric({name: Constants.HeartBeatMetricName, value: 0, properties: properties});\n        callback();\n    }\n\n    public dispose() {\n        HeartBeat.INSTANCE = null;\n        this.enable(false);\n        this._isInitialized = false;\n    }\n}\n\nexport = HeartBeat;\n"]}